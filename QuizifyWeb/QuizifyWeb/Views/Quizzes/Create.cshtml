@using QuizifyWeb.Models
@model QuizifyWeb.Controllers.QuizzesController.QuizViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var categories = new List<QuizCategory>();
}
@functions{

    private IEnumerable<SelectListItem> GetCategories()
    {
        var roles = ApplicationDbContext.Create().QuizCategories.ToList()
            .Select(x =>
                new SelectListItem
                {
                    Value = x.Id.ToString(),
                    Text = x.Name
                });

        return new SelectList(roles, "Value", "Text");
    }

}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Quiz</h4>
        <hr/>
        @*@Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.DateTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DateTime, "", new {@class = "text-danger"})
            </div>
        </div>*@


        @*<div class="form-group">
            <label class="control-label col-md-2" for="DateTime">DateTime</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" data-val="true" data-val-required="The DateTime field is required." id="DateTime" name="DateTime" type="datetime" value=""/>
                <span class="field-validation-valid text-danger" data-valmsg-for="DateTime" data-valmsg-replace="true"></span>
            </div>
        </div>*@


        <div class="form-group">
            <label class="control-label col-md-2" for="DateTime">DateTime</label>

            <div class='input-group date' id='datetimepicker1'>
                <input @*type='text'*@ class="input form-control" data-val="true" data-val-required="The DateTime field is required." id="DateTime" name="DateTime" type="datetime" value=""/>

                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                @*<span class="field-validation-valid text-danger" data-valmsg-for="DateTime" data-valmsg-replace="true"></span>*@

            </div>
        </div>
        <script type="text/javascript">
            $(function() {
                $('#datetimepicker1').datetimepicker();
            });
        </script>


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionVisibility, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.QuestionVisibility, htmlAttributes: new {@class = "input form-control"})
                @Html.ValidationMessageFor(model => model.QuestionVisibility, "", new {@class = "text-danger"})
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new {@class = "control-label col-md-2"})

            <div class="col-md-10">



                @Html.EditorFor(model => model.Location.Latitude, new {htmlAttributes = new {@class = "form-control"}})
                @Html.LabelFor(model => model.Location.Longitude, htmlAttributes: new {@class = "control-label col-md-2"})


                @Html.EditorFor(model => model.Location.Longitude, new {htmlAttributes = new {@class = "form-control"}})
                @Html.LabelFor(model => model.Location.City, htmlAttributes: new {@class = "control-label col-md-2"})


                @Html.EditorFor(model => model.Location.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
            </div>
        </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new {@class = "control-label col-md-2"})


            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new {htmlAttributes = new {@class = "form-control"}})


            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new {@class = "control-label col-md-2"})


            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new {htmlAttributes = new {@class = "form-control"}})


            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label col-md-2"})


            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})


            </div>
        </div>
        


        <div class="form-group">
            @Html.LabelFor(model => model.QuizCategory, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.QuizCategory, GetCategories())
                @Html.ValidationMessageFor(model => model.QuizCategory, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })


            <label></label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPublic)
                    @Html.ValidationMessageFor(model => model.IsPublic, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}